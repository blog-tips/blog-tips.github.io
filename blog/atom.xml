<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>作り方の研究ブログ</title>
    <link rel="alternate" type="text/html" href="https://blog-tips.net/blog/" />
    <link rel="self" type="application/atom+xml" href="https://blog-tips.net/blog/atom.xml" />
    <id>tag:blog-tips.net,2009-06-02:/blog//11</id>
    <updated>2022-11-20T15:18:37Z</updated>
    <subtitle>ブログの作り方のちっちゃいぶろぐです。</subtitle>
    <generator uri="http://www.sixapart.com/movabletype/">Movable Type Pro 7.1.1</generator>

<entry>
    <title>ドメインの売却は円安の今がチャンス</title>
    <link rel="alternate" type="text/html" href="https://blog-tips.net/blog/domain/godaddy-enyasu.html" />
    <id>tag:blog-tips.net,2022:/blog//11.738</id>

    <published>2022-11-19T05:15:53Z</published>
    <updated>2022-11-20T15:18:37Z</updated>

    <summary>ドル円の為替が円安に振れてきたので、海外オークションサイトでドメインを売却してき...</summary>
    <author>
        <name>ブログの作り方</name>
        
    </author>

    <category term="４文字ドットコムなどの高価値のドメインを売却する予定でしたら、まさに円安の今がチャンス到来といえます。" label="４文字ドットコムなどの高価値のドメインを売却する予定でしたら、まさに円安の今がチャンス到来といえます。" scheme="http://www.sixapart.com/ns/types#tag" />
    
    <content type="html" xml:lang="ja" xml:base="https://blog-tips.net/blog/">
        <![CDATA[<p>ドル円の為替が円安に振れてきたので、海外オークションサイトでドメインを売却してきました。</p>]]>
        <![CDATA[<p>円安の影響でドメインの更新費用の負担が増えてきた印象がありますが、逆に使っていないドメインを海外で売却すれば高めで売れるかもしれません。</p>
<p>試しに、GoDaddyにて６個ほどを100ドル前後で売りに出したのですが、そのうちの１個が落札され、手数料が差し引かれたのち72ドルの送金という結果になりました。</p>
<p><img src="https://blog-tips.net/blog/image/godaddy-enyasu.png" alt="GoDaddyドメイン売却" width="480" height="320" class="ccc" /></p>
<p>72ドルでも、１ドル100円の時に売れば約7200円ですが、円安で150円の時に売ったので約10800円の計算になりますので、円安の際は海外で売却するのがよいと感じています。500ドル、1000ドル単位ではなかなか買い手がつかない印象がありますが、100ドル未満の場合は割とはやく買い手がつく印象があります。</p>
<p>インフレが加速している米国では、アルバイトでも月収50万円といった状態になっていますが、この場合は米国で労働力を高く売っていることになります。一方、ドメインの場合は日本にいながら米国にてドル建てで売却できるので、自宅にいながらお手軽に円安のメリットを受けることができます。</p>
<p>４文字ドットコムなどの高価値のドメインを売却する予定でしたら、まさに今がチャンス到来といえるかもしれません。</p>
<p>気になるのは円安がいつまで続くのかという点ですが、この点については主観にはなりますが、既に10月に151円でピークを付けた感があり、今後は140円～145円程度で推移していくものと想定しています。</p>
<p>その後、来年の春頃から徐々に円高に戻っていくのではないか、そう推測しています。</p>
<p>ドメインを売却したドルは、当面はPaypalなどでドル建てでそのまま持っていて、円安にふれた際にでも日本円に換金するのがよいと思います。ただし、逆に急激に円高にふれた際には日本円に換金した際の取り分が目減りしてしまいますので注意が必要です。</p>
<p>いずれにしても、この円安はそう長くは続かず、長くても半年程度と感じていますので、入手したドルは放置せず、今のうちに日本円に換金しておくのがよいでしょう。</p>]]>
    </content>
</entry>

<entry>
    <title>消費者庁がアフィリエイト広告の規制強化を検討</title>
    <link rel="alternate" type="text/html" href="https://blog-tips.net/blog/tips/affiliate-regulation.html" />
    <id>tag:blog-tips.net,2022:/blog//11.737</id>

    <published>2022-02-01T15:11:06Z</published>
    <updated>2022-02-01T15:43:29Z</updated>

    <summary>サイトでアフィリエイトをしている方も多いと思いますが、消費者庁でアフィリエイト広...</summary>
    <author>
        <name>ブログの作り方</name>
        
    </author>

    <category term="消費者庁の方でアフィリエイト広告に関する検討会が開催されたようです。" label="消費者庁の方でアフィリエイト広告に関する検討会が開催されたようです。" scheme="http://www.sixapart.com/ns/types#tag" />
    
    <content type="html" xml:lang="ja" xml:base="https://blog-tips.net/blog/">
        <![CDATA[<p>サイトでアフィリエイトをしている方も多いと思いますが、消費者庁でアフィリエイト広告に関する検討会が開催されたようです。</p>]]>
        <![CDATA[<p><a href="https://www.caa.go.jp/policies/policy/representation/meeting_materials/review_meeting_003/026907.html" target="_blank" rel="nofollow noopener noreferrer">第6回 アフィリエイト広告等に関する検討会(2022年1月28日)</a></p>
<p>これによりますと、最近はアフィリエイトでの虚偽・誇大広告などが問題となっており、消費者庁への相談や苦情などが多くなってきているようです。そのため、たとえアフィリエイト広告であっても、広告主の責任であることを明確化して規制する方向で検討されています。</p>
<p>これは主に景品表示法に関するものと思いますが、例えば、数百円のお試し価格で購入したものの、実際には定期しばりがあり、定価1万円の商品を3ヶ月購入しないと解約できなかったなどの悪質なケースが該当するかと思います。</p>
<p>あるいは、シミや水素水、育毛、もしくはダイエット商品など、根拠がないにも関わらず、あたかも効果があるかのような虚偽の記載をして販売している商品などが該当します。</p>
<p>このような悪質な広告を排除するため、アフィリエイトサイトを規制し、また広告であることの表示も義務付ける方向で検討しているようです。</p>
<p>ぼくもこのような悪質な広告を排除することはいいことだとは思いますが、<span class="red">一般的なアフィリエイトサイトを「広告」とすること</span>には違和感を感じています。</p>
<p>上記の資料では、アフィリエイターが「①広告作成」となっていますが、このような広告前提でサイトを運営しはじめるパターンは少ないはずです。</p>
<p><img src="https://blog-tips.net/blog/image/syouhisya-tyou.png" alt="" width="480" height="360" class="ccc" /></p>
<p>一般的なウェブサイト運営のプロセスでいえば、もともとは趣味でブログやホームページを更新していたものの、ページ数が多くなっていくに従い、必然的に有用な商品やサービスにリンクするケースが多くなっていきます。</p>
<p>この時点ではまだナチュラルリンクですが、サイトに設置している連絡先からASP経由でのお誘いを受け、次第にアフィリエイトリンクに差し替えて掲載するといったパターンが多いはずです。その際、広告主や代理店から文言についての要望などはまずありません。</p>
<p>そのため、結果的にはアフィリエイトサイトにはなるものの、そもそもが「広告」ではなく、表現の自由の範囲内での<span class="red">中立的な「情報コンテンツ」</span>にすぎないのです。</p>
<p>おそらく、消費者庁が考えるアフィリエイト広告というのは、縦に長い記事風のPPC広告のことを指しているのではないかと感じています。確かにPPC広告については広告主の責任になるものと思いますが、一般的なアフィリエイトサイトは「広告」とはいえないものと思います。</p>
<p>このあたり、提携関係を終了してナチュラルリンクに戻せば、そのコンテンツは広告ではなくなり、景品表示法の対象外になるのかという疑問があります。</p>
<p>外見上、全く同じ内容であっても、リンクのURLがASP経由なら広告、ナチュラルリンクなら広告ではないなどとするのは意味のないことです。</p>
<p>そのため、PPC広告のみをアフィリエイト広告とし、通常のウェブサイトでのアフィリエイト掲載については広告表示の義務の対象外とすべきではないかと思います。</p>]]>
    </content>
</entry>

<entry>
    <title>運営者情報の公開でSEO対策</title>
    <link rel="alternate" type="text/html" href="https://blog-tips.net/blog/seo/infomation-about.html" />
    <id>tag:blog-tips.net,2021:/blog//11.736</id>

    <published>2021-12-17T08:52:53Z</published>
    <updated>2021-12-17T09:38:19Z</updated>

    <summary>最近のSEO対策の傾向として、専門性や権威性、信頼性が重要になってきたため、これ...</summary>
    <author>
        <name>ブログの作り方</name>
        
    </author>

    <category term="運営者情報を公開すれば、上位表示しやすくなったともいえますので、可能な限りコンテンツを作成したのが誰なのかの情報を公開しておくことをおすすめします。" label="運営者情報を公開すれば、上位表示しやすくなったともいえますので、可能な限りコンテンツを作成したのが誰なのかの情報を公開しておくことをおすすめします。" scheme="http://www.sixapart.com/ns/types#tag" />
    
    <content type="html" xml:lang="ja" xml:base="https://blog-tips.net/blog/">
        <![CDATA[<p>最近のSEO対策の傾向として、専門性や権威性、信頼性が重要になってきたため、これを機に運営者情報を公開してみました。</p>]]>
        <![CDATA[<p>結果として検索順位が上昇したのですが、あまり手間をかけずにSEO対策できるため、運営者情報は公開しておくことをおすすめします。</p>
<p><a href="https://www.google.com/search/howsearchworks/how-search-works/rigorous-testing/?hl=ja" target="_blank" rel="nofollow noopener noreferrer">こちらのページ</a>にて、<span class="red">検索品質評価ガイドライン</span>のPDFが公開されていますが、Googleはアルゴリズムを変更する際にテストをしており、その際に評価者がページの品質をチェックする際の指針や例がこのガイドラインにて提供されています。</p>
<p>この検索品質評価ガイドラインのPDFには英語版しかありませんが、PDFのサイズ容量を縮小した上でGoogle翻訳にアップロードすれば、日本語版を読むことができます。</p>
<p>このガイドラインには、運営者情報について以下のような記載があります。</p>
<p><img src="https://blog-tips.net/blog/image/sekinin-sya.png" alt="検索品質評価ガイドライン" width="480" height="270" class="ccc" /></p>
<blockquote>
<p>■<b>「2.5.2ウェブサイトの責任者とページ上のコンテンツを作成した人を見つける」</b></p>
<p>・誰が（個人、会社、企業、財団など）<span class="red">Webサイトの責任者</span>か。<br /> ・ページのコンテンツを作成したのは誰か（個人、会社、企業、財団など）。</p>
<p>■<b>「4.3明確で満足のいくウェブサイト情報：責任者とカスタマーサービス」</b></p>
<p><span class="red">Webサイトの責任者</span>を理解することは、ほとんどの種類のWebサイトのEATを評価する上で重要な部分です。</p>
<p>■<b>「6.6ウェブサイトまたはメインコンテンツの作成者に関する不十分な量の情報」</b></p>
<p>私たちはほとんどのWebサイトについて、何らかの形式の<span class="red">Webサイト情報</span>を期待しています。匿名性の正当な理由がない限り、誰が（例：個人、会社、企業、財団など）メインコンテンツを作成したのかについての明確な情報を期待しています。</p>
<p>■<b>「7.4.1ウェブサイトまたはメインコンテンツ作成者に関する不十分な情報」</b></p>
<p>誰がコンテンツを作成し、<span class="red">誰がコンテンツの責任者であるか</span>についての情報を提供することは、ページにアクセスする人との信頼関係の構築に重要。</p>
<p>■<b>「9.2評判とEAT：ウェブサイト、それともメインコンテンツの作成者？」</b></p>
<p>ページの品質評価を付けるには、Webサイトとメインコンテンツ作成者の両方の評判とEATを考慮する必要があります。</p>
</blockquote>
<p>ざっと見てみますと、「サイト運営者」と「コンテンツ作成者」についての情報や評判が重要視されており、特にコンテンツの作成者は誰で、SNSなどの外部での評判や経歴はどうなのかについて重点を置いているように思います。</p>
<p>必ずしも「サイトの責任者」と「コンテンツ作成者」は一致しませんので、できればコンテンツ作成者についての情報を公開しておいた方がよいかもしれません。おそらくは、ニックネームでも可能と思います。</p>
<p>ただ、ぼくはネット上に個人名を晒すのは抵抗があったため、個人会社の法人名のみを公開することにしましたが、これだけでも多少のSEO効果があったと感じております。</p>
<p>この流れは<a href="https://blog-tips.net/blog/tips/dena.html">DeNAのWELQ問題</a>が発端かと思いますが、今後、大部分の匿名の個人ブログはネット上ではヒットしなくなるのかもしれません。</p>
<p>逆にいえば、運営者情報を公開すれば、上位表示しやすくなったともいえますので、可能な限りコンテンツを作成したのが誰なのかの情報を公開しておくことをおすすめします。</p>]]>
    </content>
</entry>

<entry>
    <title>Movable Typeの脆弱性をついた攻撃が発生</title>
    <link rel="alternate" type="text/html" href="https://blog-tips.net/blog/mt/xmlrpc.html" />
    <id>tag:blog-tips.net,2021:/blog//11.735</id>

    <published>2021-11-11T00:55:48Z</published>
    <updated>2021-11-11T01:18:42Z</updated>

    <summary>レンタルサーバー会社から負荷が高くなっているとの連絡があったのですが、Movab...</summary>
    <author>
        <name>ブログの作り方</name>
        
    </author>

    <category term="サーバー会社から負荷が高くなっているとの連絡があったのですが、movabletypeの脆弱性をついた攻撃を受けてしまっていたようです。" label="サーバー会社から負荷が高くなっているとの連絡があったのですが、Movable Typeの脆弱性をついた攻撃を受けてしまっていたようです。" scheme="http://www.sixapart.com/ns/types#tag" />
    
    <content type="html" xml:lang="ja" xml:base="https://blog-tips.net/blog/">
        <![CDATA[<p>レンタルサーバー会社から負荷が高くなっているとの連絡があったのですが、Movable Typeの脆弱性をついた攻撃を受けてしまっていたようです。</p>]]>
        <![CDATA[<p>日付はいずれも11月8日～9日あたりになりますが、このような見知らぬphpファイルを埋め込まれ、サーバーの負荷が高くなる攻撃がされてました。</p>
<p><img src="https://blog-tips.net/blog/image/kaizan-mt.png" alt="" width="480" height="360" class="ccc" /></p>
<p>加えて、.htaccessファイルも書き換えられていました。</p>
<p>この原因についてですが、「<span class="red">XMLRPC API</span>」のOSコマンド・インジェクションの脆弱性をついた攻撃とのことです。この「XMLRPC API」については詳しくはよく分かりませんが、外部からの操作が可能になる脆弱性とのことです。</p>
<p>そこでアクセスログを確認してみたところ、確かに「mt-xmlrpc.cgi」への不正アクセスの痕跡があり、不審なphpファイルを埋め込まれていたようでした。</p>
<p><img src="https://blog-tips.net/blog/image/log-xmlrpc.png" alt="" width="480" height="360" class="ccc" /></p>
<p>これに対応するには、Movable Typeの公式サイトより、修正版の「Movable Type 7 r.5003」にアップデートする必要があります。</p>
<p>ただ、すぐにアップデートする余裕がない場合、とりあえずでも「mt-xmlrpc.cgi」へのアクセスを制限しておくことをおすすめします。</p>
<p><img src="https://blog-tips.net/blog/image/mt-xmlrpc.png" alt="" width="480" height="360" class="ccc" /></p>
<p>当サイト運営者はパーミッションをゼロにしましたが、使用していなければ、ファイル自体を削除してしまってもよいかもしれません。</p>
<p><img src="https://blog-tips.net/blog/image/zokusei-0.png" alt="" width="480" height="360" class="ccc" /></p>
<p>埋め込まれたファイルについては、日時を確認すればすぐにわかると思いますが、自サイトの場合は容量の大きなphpファイルのみでした。それらについても必ず削除しておくことをおすすめします。</p>
<p>加えて、.htaccessについても書き換えられている可能性があるため、確認して元に戻しておくとよいでしょう。</p>]]>
    </content>
</entry>

<entry>
    <title>MovableTypeで構造化データを設定してみました</title>
    <link rel="alternate" type="text/html" href="https://blog-tips.net/blog/mt/howto-jason.html" />
    <id>tag:blog-tips.net,2021:/blog//11.732</id>

    <published>2021-07-20T21:14:09Z</published>
    <updated>2021-07-20T23:32:39Z</updated>

    <summary>当ブログではMovableTypeを使用していますが、MTブログでjsonの構造...</summary>
    <author>
        <name>ブログの作り方</name>
        
    </author>

    <category term="当ブログではmovabletypeを使用していますが、mtブログでjsonの構造化データを作成してみました。" label="当ブログではMovableTypeを使用していますが、MTブログでjsonの構造化データを作成してみました。" scheme="http://www.sixapart.com/ns/types#tag" />
    
    <content type="html" xml:lang="ja" xml:base="https://blog-tips.net/blog/">
        <![CDATA[<p>当ブログではMovableTypeを使用していますが、MTブログでjsonの構造化データを設定してみました。</p>]]>
        <![CDATA[<p>構造化データのうち、「ぱんくずリスト」については全ページ一律で設定できるため、比較的簡単に対応できると思います。</p>
<p>一方、「記事タイプ」や「HowTo」については、画像の有無やコンテンツの性質によって個別に違いが出てきます。</p>
<p>当ブログでは画像を使用していない記事もあるため、全ページを一律で記事（Article）タイプの構造化データを設定するわけにもいきません。また、記事タイプでは<a href="https://blog-tips.net/blog/tips/gazou-1200px.html">1200px以上の画像が必要</a>とのことで、小さい画像を掲載しているページについても対応が難しいです。</p>
<p>そのため、<span class="red">記事番号（EntryID）</span>を割り振って場合分けをし、１番の記事ならArticleのjsonを表示、２番の記事ならHowToのjsonを表示、３番の記事はjsonなし...などといった形で個別に対応するのがよいと思います。</p>
<p>&lt;mt:If tag="EntryID" eq="1"&gt;<br /> Article構造化データ<br /> &lt;/mt:If&gt;</p>
<p>&lt;mt:If tag="EntryID" eq="2"&gt;<br /> HowTo構造化データ<br /> &lt;/mt:If&gt;</p>
<p>上記のような「テンプレートモジュール」を作成し、body終了タグの直前にでも設定しておくとよいでしょう。</p>
<h2>構造化データ化する際の手順</h2>
<p>実際に作成する際、以下の手順で対応するとよいでしょう。</p>
<p id="step1"><b>①記事番号の出力</b></p>
<p>まず、「ブログ記事の詳細」の適当な箇所に、&lt;$mt:EntryID$&gt;を記載して記事番号を表示させます。</p>
<p>&lt;article id="&lt;$mt:EntryID$&gt;"&gt;</p>
<p><img src="https://blog-tips.net/blog/image/entry-id.png" alt="" width="480" height="360" class="ccc" /></p>
<p>この番号を元に上記の記事番号による場合分けをしていきます。</p>
<p id="step2"><b>②「テンプレートモジュール」で「記事構造化データ」を作成</b></p>
<p>テンプレートモジュールで適当なものを複製し、上記のようなEntryIDによる場合分けの内容に書き変えます。名前は何でも良いと思います。</p>
<p>例えば、こちらの場合、エントリーナンバー719番の記事に適用する構造化データの内容になります。</p>
<p><img src="https://blog-tips.net/blog/image/json-article.png" alt="" width="480" height="360" class="ccc" /></p>
<p>記事タイプの場合、日付のフォーマットは「ISO 8601」ですが、MTタグのformatの場合、utc="1"を取れば、日本時間で表示されるはずです。こちらの画像では見切れてしまいましたが、最後のzは日本時間の+09:00にしておけばよいと思います。</p>
<p id="step3"><b>③「ぱんくずリスト構造化データ」の作成</b></p>
<p>ぱんくずリストについては、実際のぱんくずリストの箇所のタグを参考にしながら作成すれば、普通に出力されるはずです。</p>
<p><img src="https://blog-tips.net/blog/image/mtjson-pankuzu.png" alt="" width="480" height="360" class="ccc" /></p>
<p id="step4"><b>④「body」タグの直前に上記の構造化データを設定</b></p>
<p>ブログ記事のテンプレートなどで、「body」タグの直前に②と③の構造化データを設定しておきます。</p>
<p><img src="https://blog-tips.net/blog/image/kouzouka-blog.png" alt="" width="480" height="360" class="ccc" /></p>
<p id="step5"><b>⑤AMP用の構造化データも別途に作成</b></p>
<p>AMPページも作成している場合、同様の手順でAMP用のテンプレートにも設定しておきます。</p>
<p>結局、当ブログでは以下のような形になりました。</p>
<p></p>
<p><img src="https://blog-tips.net/blog/image/kouzouka-tenpure.png" alt="" width="480" height="360" class="ccc" /></p>
<p id="step6"><b>⑥リッチリザルトテストでチェック</b></p>
<p>完了しましたら、再構築をしてデータを反映させ、リッチリザルトテストでチェックするとよいでしょう。</p>
<p>ちなみに、このページについては「記事」と「ぱんくずリスト」、「ハウツー」を設定してみました。</p>
<p><img src="https://blog-tips.net/blog/image/json-finish.png" alt="" width="480" height="360" class="ccc" /></p>
<p>上記のような方法の場合、いずれ「記事構造化データ」のテンプレートの行数が長くなっていくはずですが、「記事構造化データその１」、「記事構造化データその２」などとわけて記載していけば、対応できると思います。</p>]]>
    </content>
</entry>

<entry>
    <title>フルHD解像度「1920x1080」に最適化</title>
    <link rel="alternate" type="text/html" href="https://blog-tips.net/blog/tips/1920-1080hd.html" />
    <id>tag:blog-tips.net,2021:/blog//11.731</id>

    <published>2021-06-13T21:46:28Z</published>
    <updated>2021-07-20T09:03:08Z</updated>

    <summary>アクセス解析で解像度の割合を確認してみたのですが、最近のパソコンは「1920x1...</summary>
    <author>
        <name>ブログの作り方</name>
        
    </author>

    <category term="シェアが多いフルhd「1920x1080」の解像度にホームページを最適化するのが重要ではないかと思います。" label="シェアが多いフルHD「1920x1080」の解像度にホームページを最適化するのが重要ではないかと思います。" scheme="http://www.sixapart.com/ns/types#tag" />
    
    <content type="html" xml:lang="ja" xml:base="https://blog-tips.net/blog/">
        <![CDATA[<p>アクセス解析で解像度の割合を確認してみたのですが、最近のパソコンは「1920x1080」のフルHDが主流になっているようです。</p>]]>
        <![CDATA[<p>こちらは当ブログではありませんが、管理している他サイトでは「1920x1080」の割合が約23％となっていました。</p>
<p><img src="https://blog-tips.net/blog/image/1920px.png" alt="" width="320" height="214" class="ccc" /></p>
<p>このAnalyticsで解像度シェアを確認する場合、「テクノロジー → ブラウザとOS」へと移動し、チャート下の「画像の解像度」の箇所から確認することができます。</p>
<p>■<b>「1920x1080」の解像度について</b></p>
<p>当サイト運営者は23.8インチモニターの環境で使用しているのですが、<span class="red">「1920x1080」は文字が小さく感じる</span>ため、この解像度は使用していません。文字サイズは「1600x900」あたりが一番ちょうどよいと考えています。</p>
<p>アクセス解析上、このシェアの多い「1920x1080」の場合は滞在時間が短くなっていますが、当サイト運営者自身も文字が小さくて見づらいと感じていますので、おそらくは文字が小さいのが原因だろうと思います。</p>
<p>ただ、「1920x1080」で同じ解像度の場合、モニターサイズが大きければ、文字サイズも大きくなるため、27インチや32インチの大きめのモニターの場合は特に問題ないはずです。</p>
<p>一方、15インチのノートパソコンだとさすがに小さすぎて厳しいのではないかと思いますが、目のいい人なら問題ない人もいるはずです。このあたりは個人差もあると思います。</p>
<p>結局、「1920x1080」の解像度の場合はワンランク上の文字サイズで表示されるようにしましたが、メディアクエリ1900pxあたりで区切って、それ以下の解像度の場合は「16px」、それ以上の場合は「18px」のフォントサイズで表示されるようにしています。また、width幅も1000pxから1100pxへ少し大きくしました。</p>
<p>■<b>「1536x864」と「1280x720」の解像度</b></p>
<p>一方、次に多い「1536x864」については、解像度「1920x1080」の状態でスケールを125％に拡大して使用している可能性が高いと感じています。文字などを拡大する場合、拡大縮小とレイアウトの箇所から変更することができます。</p>
<p><img src="https://blog-tips.net/blog/image/kakudai.png" alt="" width="320" height="230" class="ccc" /></p>
<p>以下はスクロールバーを「17px」とした上で実際に計測した値ですが、「1920x1080」のフルHDモニターで100％～150％に拡大して使用している人が多いのかもしれません。</p>
<p>「1920x1080」125％ → 1536px<br /> 「1920x1080」150％ → 1280px<br /> 「1920x1080」175％ → 1098px</p>
<p>■<b>「1366x768」や「1440x900」の解像度</b></p>
<p>そのほか、「1366x768」や「1440x900」の解像度もあります。</p>
<p>1366pxあたりの解像度の場合、滞在時間が長くなっていますが、おそらくは1400px前後でちょうどよい文字サイズにサイトが最適化されているのかもしれません。「1920x1080」以外の解像度については、そう大きな違いはないかなと感じています。</p>
<p>そのため、いかにして割合の多い「1920x1080」に最適化するかがポイントになると思いますが、メディアクエリで区切って、フォントサイズとサイトのwidth幅を少し大き目にすることをおすすめします。</p>]]>
    </content>
</entry>

<entry>
    <title>Google Domainsに移管してみました</title>
    <link rel="alternate" type="text/html" href="https://blog-tips.net/blog/domain/google-domains.html" />
    <id>tag:blog-tips.net,2021:/blog//11.730</id>

    <published>2021-05-30T13:32:14Z</published>
    <updated>2021-05-30T14:04:30Z</updated>

    <summary>Google Domainsが日本でも使えるようになっていたため、今回いくつかの...</summary>
    <author>
        <name>ブログの作り方</name>
        
    </author>

    <category term="googleドメインですが、日本でも使えるようになっていたため、今回いくつかのドメイン名を移管してみました。" label="Googleドメインですが、日本でも使えるようになっていたため、今回いくつかのドメイン名を移管してみました。" scheme="http://www.sixapart.com/ns/types#tag" />
    
    <content type="html" xml:lang="ja" xml:base="https://blog-tips.net/blog/">
        <![CDATA[<p>Google Domainsが日本でも使えるようになっていたため、今回いくつかのドメイン名を移管してみました。</p>]]>
        <![CDATA[<p>以前に利用しようとした際は日本ではまだ対応しておらず、「日本でも対応したらメールで教えるね！」とのことだったため、メールアドレスを登録していた記憶があるのですが、いつの間にか使えるようになっていたみたいです。</p>
<p><a href="https://domains.google/intl/ja_jp/" target="_blank" rel="nofollow noopener noreferrer">Google Domains</a></p>
<p>気になるのはwhoisの代理公開ですが、ドメインに種類によっては対応していないケースもあるものの、大抵は対応しているもようです。</p>
<p>対応している場合は、移管の際の確認画面で「プライバシー保護が有効です」が表示されるため、こちらで確認してから移管されるとよいでしょう。</p>
<p><img src="https://blog-tips.net/blog/image/google-whois.png" alt="" width="320" height="264" class="ccc" /></p>
<p>■<b>ぼくがGoogle Domainsを選んだ理由</b></p>
<p>今回、ぼくがGoogle Domainsを選んだきっかけは、複数のドメインのリダイレクト設定で悩みがあったためです。</p>
<p>現在、「example.com」や「example.net」など、.comや.netなどの種類が違うだけで同じドメイン名をいくつか持っているのですが、これを「example.info」に転送して統一して使用しています。</p>
<p>これは打ち間違えやスペルミス対策というよりも、ただのコレクションなのですが、入手困難なドメイン名で３つまでを取得しており、今回これに４つ目の「org」も入手できたため、こちらも転送して統一したいと考えています。</p>
<p>けれども、こちらのドメインについては前運営者の被リンクが100本ほど残っているようなのです。</p>
<p>この場合、そのまま転送してしまうと、被リンク数の水増しのような感じでペナルティーがかかってしまう懸念があるため、既存の被リンクを無効にしてから転送したいのですが、どのような方法がよいのか確証が持てません。</p>
<p>robots.txtでクロールを拒否してから、メタタグ0秒でリダイレクトするか、もしくは否認ツールで付いている被リンクをすべて否認してからリダイレクトか、判断が難しいところです。</p>
<p>その点、Google Domainsでは簡単な転送機能を提供しているとのことですので、今回はこちらを利用してみることにしました。</p>
<p><img src="https://blog-tips.net/blog/image/google-tensou.png" alt="" width="320" height="249" class="ccc" /></p>
<p>自分のサーバーを経由せず、Googleに転送設定をすべてお任せすれば、無難に処理してくれるのではないかと感じています。また、Google Domainsで一括管理すれば、ある程度は透明性を確保できると思います。</p>
<p>この転送設定についてですが、何も考えずに推奨どおりにすすめていきますと「<span class="red">302リダイレクト</span>」での転送になるようです。なので、メタタグ0秒や301よりも、302が無難なのかもしれません。</p>
<p>ただ、安全を期すならSearch Consoleで被リンクを確認し、前運営者のリンクをすべて否認した上で転送設定をかけるのがベストではないかなと思います。</p>]]>
    </content>
</entry>

<entry>
    <title>WEBフォントをpreloadするのは止めました</title>
    <link rel="alternate" type="text/html" href="https://blog-tips.net/blog/tips/preload.html" />
    <id>tag:blog-tips.net,2021:/blog//11.729</id>

    <published>2021-04-23T05:05:22Z</published>
    <updated>2021-04-23T05:48:28Z</updated>

    <summary><![CDATA[今までは&lt;link rel="preload"でWEBフォントを優先してダ...]]></summary>
    <author>
        <name>ブログの作り方</name>
        
    </author>

    <category term="preloadで意図的にダウンロードするのではなく、ブラウザに任せてしまった方がかえって効率がよいのではないかと思います。" label="preloadで意図的にダウンロードするのではなく、ブラウザに任せてしまった方がかえって効率がよいのではないかと思います。" scheme="http://www.sixapart.com/ns/types#tag" />
    
    <content type="html" xml:lang="ja" xml:base="https://blog-tips.net/blog/">
        <![CDATA[<p>今までは&lt;link rel="preload"でWEBフォントを優先してダウンロードしていたのですが、場合によっては逆効果になるのでこれは止めました。</p>]]>
        <![CDATA[<p>preloadであらかじめWEBフォントを優先してダウンロードしておけば、レンダリングする際にはやくなると思っていたのですが、PCサイトではそのWEBフォントを使っていても、スマホでは使わないこともあり、強制的にダウンロードしたフォントが無駄になってしまうこともあります。</p>
<p>例えば、当サイト運営者の場合、Windows系のPCサイトではMeiryoよりもNotoフォントの方が綺麗だと感じているため、PCサイトではNotoを好んで使ってます。</p>
<p>一方、iPhone系のスマホで閲覧する際はヒラギノの方が綺麗だと思うので、スマホではNotoではなくヒラギノを好んで使っています。</p>
<p>この場合、NotoをpreloadすることでPCサイトではメリットがありますが、スマホではNotoではなくヒラギノに設定しているので、せっかくpreloadでNotoをダウンロードしても意味がなくなってしまいます。</p>
<p>通常、WEBフォントは実際に使う際にダウンロードされるため、@font-faceで指定していても使わなければ問題ありません。</p>
<p>例えば、PCサイトで@font-faceを設定してNotoフォントを指定していたとしても、PCサイト用のメディアクエリでサンセリフを指定して打ち消していた場合、このフォントはダウンロードされません。</p>
<p><img src="https://blog-tips.net/blog/image/font-style.png" alt="" width="320" height="226" class="ccc" /></p>
<p>上記の場合、フォントサイズはゼロになりましたが、CSSに@font-faceを指定しているだけではダウンロードされず、実際に使う際にダウンロードされます。（※すべてのブラウザで確認したわけではありません。）</p>
<p><img src="https://blog-tips.net/blog/image/fd2.png" alt="" width="320" height="183" class="ccc" /></p>
<p>一方、上記の場合でも、preloadで設定している場合はHTMLファイルにアクセスすると強制的にダウンロードされます。</p>
<p><img src="https://blog-tips.net/blog/image/fd.png" alt="" width="320" height="170" class="ccc" /></p>
<p>そのため、ダウンロードしても使わなかった場合は効率が悪いです。</p>
<p>ほかにも、ブラウザが.woff2に対応していなければ、.woff2をpreloadしても使われないでしょうし、ローカルフォントの方を使うのであれば、この場合も意味がなくなってしまいます。</p>
<p>そのため、preloadで意図的にダウンロードするのではなく、ブラウザに任せてしまった方がかえって効率がよいのではないかと思います。</p>]]>
    </content>
</entry>

<entry>
    <title>MFI完全移行による無料ブログへの影響</title>
    <link rel="alternate" type="text/html" href="https://blog-tips.net/blog/how-to/mfi-freeblog.html" />
    <id>tag:blog-tips.net,2021:/blog//11.728</id>

    <published>2021-04-09T10:55:33Z</published>
    <updated>2021-04-09T11:19:32Z</updated>

    <summary>WEB全体がモバイルファースト・インデックス（MFI）へ完全移行する予定となって...</summary>
    <author>
        <name>ブログの作り方</name>
        
    </author>

    <category term="今後のモバイルファースト・インデックス完全移行の影響により、無料ブログでのアクセス数が減少する可能性があると懸念しています。" label="今後のモバイルファースト・インデックス完全移行の影響により、無料ブログでのアクセス数が減少する可能性があると懸念しています。" scheme="http://www.sixapart.com/ns/types#tag" />
    
    <content type="html" xml:lang="ja" xml:base="https://blog-tips.net/blog/">
        <![CDATA[<p>WEB全体がモバイルファースト・インデックス（MFI）へ完全移行する予定となっていますが、無料ブログの場合はどのように対処すればよいのでしょうか？</p>]]>
        <![CDATA[<p>無料ブログサービスでは「モバイル版の表示」には対応しているものの、レスポンシブウェブデザインには対応していないケースも多く、今後のMFI完全移行の影響により、無料ブログでのアクセス数が減少してしまうと懸念しています。</p>
<ul>
<li>モバイル版の表示　→　簡略化されたコンテンツ</li>
<li>レスポンシブウェブデザイン　→　PC版と同じ内容</li>
</ul>
<p>無料ブログの「モバイル版の表示」については、おおむね<span class="red">簡略化された形で表示されてしまう</span>ため、PC版と同様のコンテンツ内容とはなりません。</p>
<p>MFI移行により、スマホ版の簡略化されたコンテンツ内容が評価基準の対象となってしまうため、コンテンツ内容が薄いことで検索ランキングが下落し、アクセス数が減少してしまう可能性があると考えています。</p>
<p>結果として、無料ブログから多くの被リンクを受けているサイトについても、検索ランキング下落の憂き目を受けてしまうかもしれません。</p>
<p>これを回避するためには、無料ブログにてレスポンシブウェブデザインを取り入れるしかありませんが、FC2ブログについては「ブログの設定」で回避することができます。</p>
<p>■<b>FC2ブログでのMFI対応方法</b></p>
<p>サイドバーの「環境設定」→「ブログの設定」→「スマートフォン版の表示設定」と進み、これを「無効」に設定した上で、テンプレートをレスポンシブウェブデザインに対応するとよいでしょう。</p>
<p><img src="https://blog-tips.net/blog/image/fc2-mfi.png" alt="" width="320" height="217" class="ccc" /></p>
<p>この設定をする際ですが、一旦、有効にした上で「無効」にしないと反映されないかもしれません。もし反映されない場合、何度か「無効」にしたり「有効」にしたりした上で、最終的に「無効」にすれば反映されると思います。</p>
<p>ただし、単にこの設定を無効にしただけではMFI対応とはならず、「モバイルフレンドリーテスト」ではNGが出てくるものと思います。</p>
<p>そのため、HTMLタグのテンプレートをカスタマイズして、ビューポートを設定したり、あるいはCSSにメディアクエリを設定してスマホ版の表示を切り分けるなどの対応をする必要があります。</p>
<p>設定を「無効」にするだけなら簡単ですが、このレスポンシブウェブデザインに対応するのには初心者の場合は難易度が高いかもしれません。</p>
<p>その場合は、ブログサービス側で用意されているレスポンシブウェブデザイン対応のテンプレートに切り替えるなどして対応されるとよいでしょう。</p>]]>
    </content>
</entry>

<entry>
    <title>1200pxの画像を用意するしかあるまい</title>
    <link rel="alternate" type="text/html" href="https://blog-tips.net/blog/tips/gazou-1200px.html" />
    <id>tag:blog-tips.net,2021:/blog//11.727</id>

    <published>2021-02-05T17:17:04Z</published>
    <updated>2021-02-05T18:14:48Z</updated>

    <summary>構造化データでArticleを指定しているページがあるのですが、Seach Co...</summary>
    <author>
        <name>ブログの作り方</name>
        
    </author>

    <category term="構造化データでarticleを指定しているページがあるのですが、seachconsoleから「推奨サイズより大きい画像を指定してください」との警告を受けたので、現在、その修正作業をしています。" label="構造化データでArticleを指定しているページがあるのですが、Seach Consoleから「推奨サイズより大きい画像を指定してください」との警告を受けたので、現在、その修正作業をしています。" scheme="http://www.sixapart.com/ns/types#tag" />
    
    <content type="html" xml:lang="ja" xml:base="https://blog-tips.net/blog/">
        <![CDATA[<p>構造化データでArticleを指定しているページがあるのですが、Seach Consoleから「推奨サイズより大きい画像を指定してください」との警告を受けてしまいました。</p>]]>
        <![CDATA[<p>Google検索セントラルの公式サイトによると、以下の記述がありますが、この「マークアップされた」の意味をどう解釈するのかで対応が変わってくるかもしれません。</p>
<ul>
<li>①<span class="red">記事に直接属するマークアップされた画像のみ</span>を指定する必要があります。</li>
<li>②画像の幅は 1,200 ピクセル以上にする必要があります。</li>
<li>③すべてのページに画像を少なくとも 1 つ含める必要があります（<span class="red">マークアップを含めるかどうかは問わない</span>）。Google は、アスペクト比と解像度に基づいて、検索結果に表示する最適な画像を選択します。</li>
<li>④画像の URL は、クロールやインデックス登録に対応できる必要があります。</li>
<li>⑤画像はマークアップされたコンテンツを表している必要があります。</li>
<li>⑥ファイル形式は Google 画像検索でサポートされている必要があります。</li>
<li>⑦適切な画像が選択されるようにするために、アスペクト比が 16x9、4x3、1x1 の高解像度画像（幅と高さをかけて 800,000 ピクセル以上の画像）を複数指定してください。</li>
</ul>
<p>これが「構造化データでマークアップされた」の意味なのか、「imgのHTMLタグでマークアップされた」の意味なのかは不明ですが、おそらくは後者の意味ではないかと考えています。</p>
<p>■<b>ぼくの解釈</b></p>
<p>①と⑤</p>
<p>あくまでぼく個人の解釈なので正解かどうかはわかりませんが、これは記事内にて&lt;img&gt;タグでマークアップした画像を使い、その記事のコンテンツ内容を表す画像を使ってねという意味だと解釈しています。記事とは無関係な画像を無料の素材サイトから拾ってきて、テキトーに設定してもだめだよってことではないでしょうか。（詳細不明）</p>
<p>③と⑦</p>
<p>これは大きさの異なる複数の画像のバージョンを指定してくださいという意味だと思いますが、全てのバージョンを記事中の&lt;img&gt;タグでマークアップするかどうかはまでは問わないという意味だと解釈しています。</p>
<p>②と⑦</p>
<p>これはクオリティーの高い画像を用意してねという意味かと思います。</p>
<p>ここで、「構造化データの画像には、記事内の&lt;img&gt;タグでマークアップした画像のみを指定しないと駄目なのか？」という疑問が生じてきますが、①を読めばそうとも感じますし、③を読めばそうでもないとも感じます。</p>
<p>謎は深まるばかりですが、おそらくは記事内容を表す画像を使い、なおかつ検索結果できれいに表示されるように1200px以上の高解像度の画像を使っていれば、それを記事中の&lt;img&gt;タグで設定しているかどうかまでは問わないという意味なのかもしれません。（詳細不明）</p>
<p>個人的には、モバイル端末で表示する画像で1200pxのサイズを使うのは表示が遅くなると思うので、記事中では小さめの画像を指定するようにしました。一方、構造化データで指定する画像については全く同じ画像の元データを使い、1200pxの高解像度のものを設定するようにしました。</p>
<p>ニュース検索などをちらほら見ていますと、600px程度の画像は鮮明ではないものもあるので、やはり1200px程度の高解像度のものが必要かなと感じています。また、文字入れしているものやキャプ画、あるいはコンテンツと無関係な画像は若干チープに感じてしまいます。</p>
<p>当ブログでいいますと、こんな感じだと検索結果に表示されていてもそれほど違和感はないかと思います。</p>
<p><img src="https://blog-tips.net/blog/image/1200px-sample.png" alt="" width="600" height="342" class="ccc" /></p>
<p>一方、これがぼやけた画像のキャプ画だとチープな印象が出てくるはずです。</p>
<p>なので、AMPテストでプレビューしてみて、検索結果映えする形で1200px以上の高解像度の写真画像を設定しておくことをおすすめします。また、アスペクト比「16x9、4x3、1x1」との指定がありますので、1200pxにした場合は「1200px×675px、1200px×900px、1200px×1200px」あたりのサイズにトリミングして使うか、あるいは撮影機材の方であらかじめアスペクト比を設定しておくとよいかもしれません。</p>]]>
    </content>
</entry>

<entry>
    <title>当ブログをAMPに対応しました</title>
    <link rel="alternate" type="text/html" href="https://blog-tips.net/blog/mt/mt-amp.html" />
    <id>tag:blog-tips.net,2021:/blog//11.726</id>

    <published>2021-01-18T21:31:48Z</published>
    <updated>2021-01-19T15:47:51Z</updated>

    <summary>当ブログをAMPに対応してみたので、Movable Typeで作成したブログをA...</summary>
    <author>
        <name>ブログの作り方</name>
        
    </author>

    <category term="当ブログをampに対応してみましたので、movabletypeで作成したブログをampに対応する方法についてご紹介します。" label="当ブログをAMPに対応してみましたので、Movable Typeで作成したブログをAMPに対応する方法についてご紹介します。" scheme="http://www.sixapart.com/ns/types#tag" />
    
    <content type="html" xml:lang="ja" xml:base="https://blog-tips.net/blog/">
        <![CDATA[<p>当ブログをAMPに対応してみたので、Movable Typeで作成したブログをAMPに対応する際の手順についてご紹介します。</p>]]>
        <![CDATA[<p>■<b>アーカイブテンプレートのコピー</b></p>
<p>作業をする前に、テンプレートのバックアップをとっておくことをおすすめします。</p>
<p>まず最初にAMPページを出力するためのテンプレートを作成しますが、オリジナルの方のブログ記事のテンプレートをコピーして複製します。</p>
<p><img src="https://blog-tips.net/blog/image/amp-fukusei.png" alt="" width="320" height="200" class="ccc" /></p>
<p>複製したら、コピーの方にAMPページなどの適当な名前をつけておきます。</p>
<p>「オリジナルの方」は「優先マーク」がついているはずですが、オリジナルの方で設定したURLのパスが優先されるため、今までの記事のパーマリンクなどが変更されることはありません。</p>
<p><b>・オリジナルページ側</b></p>
<p><img src="https://blog-tips.net/blog/image/amp-permalink.png" alt="" width="320" height="200" class="ccc" /></p>
<p>コピーした「AMPページ」の方には、AMP用のURLで出力されるようにカスタムパスを設定します。</p>
<p><img src="https://blog-tips.net/blog/image/pas.png" alt="" width="320" height="200" class="ccc" /></p>
<p>こちらは優先マークがついていないため、個別ページのパーマリンクなどへの影響はありませんが、AMPページのファイル自体は出力されます。</p>
<p><b>・AMPページ側</b></p>
<p><img src="https://blog-tips.net/blog/image/amp-ban.png" alt="" width="320" height="200" class="ccc" /></p>
<p>そのため、オリジナルの方のURL構成などは変更されない状態のまま、AMPページも別に出力されることになります。</p>
<p>■<b>AMPページのURLの設定</b></p>
<p>AMPページのURLはいろいろな方法があり、「ファイル名.amp.html」のような形のURLにすることも出来ますが、当サイトでは「AMP」フォルダ下で出力されるようにカスタムパスを設定しました。</p>
<p>例えば、当ブログではオリジナルページを「カテゴリ名/投稿名.html」の形で運営しているため、AMPページはampフォルダ下の「amp/カテゴリ名/投稿名.html」の形で出力されるように以下のカスタムパスで設定しています。</p>
<p>amp/%C/%b.html</p>
<p>「%C」はカテゴリ名、「%b」は投稿名ですが、<a href="https://www.movabletype.jp/documentation/appendices/archive-file-path-specifiers.html" target="_blank" rel="nofollow noopener noreferrer">こちらのページ</a>を参考にして、既存のURLと同じ形式になるように設定しておくことをおすすめします。</p>
<p>■<b>AMPの基本的な設定</b></p>
<p>あとは、プロジェクトの公式サイトにあるボイラープレートを参考にAMP用のテンプレートを修正していきます。</p>
<p>→ <a href="https://amp.dev/ja/documentation/guides-and-tutorials/start/create/basic_markup/" target="_blank" rel="nofollow noopener noreferrer">AMP HTML ページの作成</a></p>
<p>DTDはHTML5とほぼ同様の「AMP HTML」バージョンで書いていきます。W3C勧告のHTML5とはimgタグの仕様などで若干違う点もありますが、ほぼHTML5と考えてよいかと思います。</p>
<p>このあたりはAMP公式プロジェクトのサイトに手順が記載されているため、その通りに記載すればよいかと思います。</p>
<p>稲妻マークでDTDを修正し、&lt;link rel="canonical"でオリジナルページに正規化し、外部CSSを削除した上でCSSを&lt;style amp-custom&gt;内にコピペして、定型文を２つほどコピペしたらほぼ完成です。</p>
<p>&lt;link rel="canonical"で正規化する際、以下のように記載するとよいかもしれません。</p>
<p>&lt;link rel="canonical" href="&lt;$MTEntryPermalink$&gt;"&gt;</p>
<p>ただし、上記のとおり、優先マッピングがオンになっていた場合、この&lt;$MTEntryPermalink$&gt;のURLはAMPページの方が出力されてしまうため、「オフ」になっていることを確認することをおすすめします。</p>
<p>また、フッター部分のアクセス解析などはウィジットの中身をコピペでAMP版テンプレートに直接貼り付けたのち、アクセス解析の部分を削除することをおすすめします。</p>
<p>■<b>&lt;amp-img src=への変換方法</b></p>
<p>難しい点は画像の&lt;imgタグを&lt;amp-imgに変換することですが、Movable Typeの場合、&lt;$MTInclude module="ブログ記事の詳細"$&gt;の部分などに「regex_replace」を設定して置換できます。</p>
<p>こちらのページにあるように、スラッシュで囲まれた部分を検索し、指定した文字列に置換してファイルを出力する形になります。<br />→ <a href="https://www.movabletype.jp/documentation/appendices/modifiers/regex_replace.html" target="_blank" rel="nofollow noopener noreferrer">regex_replace - グローバル・モディファイアリファレンス</a></p>
<p>そのため、「img」を「amp-img」に変換する際、&lt;$MTInclude module="ブログ記事の詳細" regex_replace="/img/","amp-img"$&gt;でも置換できるかと思いますが、「img」だと本文中でも使用している可能性もあるため、「img src=」を「amp-img src=」に変換すればよいと思います。</p>
<p>これを上記ページの使用例にあてはめると「regex_replace="/img src=/","amp-img src="」になります。</p>
<p>ただし、これだと最初だけのひとつ目だけしか置換されないため、「g」を付けて全て置換されるようにします。</p>
<p>&lt;$MTInclude module="ブログ記事の詳細" regex_replace="/img src=/g","amp-img src="$&gt;</p>
<p>当ブログでは「img src=」などの文字列も本文中などで使用していますので、以下の入れ子を使って置換していますが、この「regex_replace」を使えば、タグを置換した上で出力することができます。</p>
<p>テストする際、テンプレートごと全てのページを再構築するのではなく、AMPテンプレートの設定を保存した上で適当な１ページのみを更新してチェックされることをおすすめします。個別ページで更新ボタンを押したのち、ampバージョンのURLにアクセスすれば「amp-img」に変わっているはずです。</p>
<p><img src="https://blog-tips.net/blog/image/img-ok.png" alt="" width="320" height="200" class="ccc" /></p>
<p>そのほか、ヘッダー部分のロゴ画像などについては、テンプレートに直接記載してしまった方がよいかもしれません。</p>
<p>■<b>border="0"の削除</b></p>
<p>当ブログではborder="0"なども付与しているため、「 ｂorder="0"」を空の「」に置換してこれも削除するように設定しておきました。<span class="red">（※ここでの記述自体も置換されるため、bを全角のｂにしています。）</span></p>
<p>ダブルクォートが重複する際はシングルクォートで以下のように記載します。<br /> 「regex_replace='/ ｂorder="0"/g',''」</p>
<p>上記と合わせると以下のようになります。</p>
<p>&lt;$MTInclude module="ブログ記事の詳細" regex_replace="/img src=/g","amp-img src=" regex_replace='/ ｂorder="0"/g',''$&gt;</p>
<p>■<b>「layout」の設定</b></p>
<p>画像の拡大、縮小の「layout」については、当ブログでは「responsive」ではなく、実寸以上には拡大されない「intrinsic」を設定しました。サイトによって使用している画像の質や大きさに違いがあるかと思いますので、解像度が低く、200px程度の小さめの画像を多く使用している場合は「intrinsic」がおすすめです。</p>
<p>ただ、高解像度の写真画像の場合は実寸以上に拡大してもそれほどぼやけないはずですので、responsiveでもよいかと思います。</p>
<p>当ブログでは全ての画像に「alt」を設定しているため、「alｔ=」を「layout="intrinsic" alｔ=」で置換することで以下のようにレイアウトタグを付与しました。<span class="red">（※tを全角にしてます。）</span></p>
<p>「regex_replace='/alｔ=/g','layout="intrinsic" alｔ='」</p>
<p>ここまでをまとめると以下のようになります。</p>
<p>&lt;$MTInclude module="ブログ記事の詳細" regex_replace="/img src=/g","amp-img src=" regex_replace='/ ｂorder="0"/g','' regex_replace='/alｔ=/g','layout="intrinsic" alｔ='$&gt;</p>
<p>■<b>終了タグ&lt;/amp-img&gt;の付与</b></p>
<p>終了タグ&lt;/amp-img&gt;についてですが、これはMTSetVarBlockを使って置換することをおすすめします。<br />→ <a href="https://www.movabletype.jp/documentation/appendices/tags/setvarblock.html" target="_blank" rel="nofollow noopener noreferrer">MTSetVarBlock - テンプレートタグリファレンス</a></p>
<p>この場合は、上記&lt;amp-imgの置換の箇所の記述は必要なくなりますが、当ブログでは以下のように設定しておきました。</p>
<p>&lt;mt:SetVarBlock name="before"&gt;/&lt;img (.*?)&gt;/g&lt;/mt:SetVarBlock&gt;<br />&lt;mt:SetVarBlock name="after"&gt;&lt;amp-img \1&gt;&lt;/amp-img&gt;&lt;/mt:SetVarBlock&gt;</p>
<p>&lt;$MTInclude module="ブログ記事の詳細" regex_replace="$before","$after"$&gt;</p>
<p>imgタグで囲まれているパターンのうち(.*?)にマッチした部分を取り出して「\1」に入れ、regex_replaceで置換するという意味になりますが、詳しくは正規表現とか置換、後方参照などで調べてみることをおすすめします。</p>
<p>(.*)のように記入すると、pタグの後ろの方の&gt;が認識されてpタグの後ろに&lt;/amp-img&gt;が付与されてしまったので、最短マッチで終えるハテナマークをつけて(.*?)にするとうまくいきました。</p>
<p><img src="https://blog-tips.net/blog/image/amp-end.png" alt="" width="320" height="200" class="ccc" /></p>
<p>これらを全部合わせると、最終的には以下のようになりました。</p>
<p>&lt;mt:SetVarBlock name="before"&gt;/&lt;img (.*?)&gt;/g&lt;/mt:SetVarBlock&gt;<br />&lt;mt:SetVarBlock name="after"&gt;&lt;amp-img \1&gt;&lt;/amp-img&gt;&lt;/mt:SetVarBlock&gt;</p>
<p>&lt;$MTInclude module="ブログ記事の詳細" regex_replace="$before","$after" regex_replace='/ ｂorder="0"/g','' regex_replace='/alｔ=/g','layout="intrinsic" alｔ='$&gt;</p>
<p><span class="red">（※置換対策でborderのbとaltのtを全角にしてます。実際に使用する際は半角で記入してください。）</span></p>
<p>当ブログではこれでうまく出力されましたが、これらを組み合わせれば、対応できるかと思います。</p>
<p>■<b>&lt;link rel="amphtml"でAMPページを指定</b></p>
<p>あとはampチェックで問題なければ、オリジナルページからampページにリンクして公開すればよいでしょう。</p>
<p>→ <a href="https://search.google.com/test/amp?hl=ja" target="_blank" rel="nofollow noopener noreferrer">AMPテスト</a></p>
<p><img src="https://blog-tips.net/blog/image/mt-amp-ok.png" alt="" width="320" height="200" class="ccc" /></p>
<p>当ブログでは正規のオリジナルページのテンプレートの方に以下のように設定しておきました。</p>
<p style="word-wrap: break-word;">&lt;link rel="amphtml" href="https://blog-tips.net/blog/amp/&lt;$MTCategoryBasename$&gt;/&lt;$mt:EntryBasename$&gt;.html"&gt;</p>
<p>問題なさそうでしたら、全ページを再構築して反映させます。</p>
<p>同様に、インデックスページやカテゴリページ、アーカイブページなどもそれぞれAMP化しておくことをおすすめします。</p>]]>
    </content>
</entry>

<entry>
    <title>「HowTo」構造化データの作り方</title>
    <link rel="alternate" type="text/html" href="https://blog-tips.net/blog/tips/howto-kouzouka.html" />
    <id>tag:blog-tips.net,2021:/blog//11.725</id>

    <published>2021-01-01T09:20:53Z</published>
    <updated>2021-01-01T11:24:59Z</updated>

    <summary>構造化データの作り方は難しい印象がありましたが、最近ではJavaScript表記...</summary>
    <author>
        <name>ブログの作り方</name>
        
    </author>

    <category term="最近ではニュース記事やレシピだけではなく、「howto」タイプの構造化データも利用できるようなので、ハウツー系ブログを運営されている方は構造化データに対応してみるとよいかもしれません。" label="最近ではニュース記事やレシピだけではなく、「HowTo」タイプの構造化データも利用できるようなので、ハウツー系ブログを運営されている方は構造化データに対応してみるとよいかもしれません。" scheme="http://www.sixapart.com/ns/types#tag" />
    
    <content type="html" xml:lang="ja" xml:base="https://blog-tips.net/blog/">
        <![CDATA[<p>構造化データの作り方は難しい印象がありましたが、最近ではJavaScript表記の「JSON-LD」が利用できるようなので構造化データに対応してみました。</p>]]>
        <![CDATA[<p>以前までの「microdata」形式と比べると簡単に利用しやすくなったと感じています。</p>
<p>また、最近ではニュース記事やレシピだけではなく、<span class="red">「HowTo」タイプの構造化データ</span>も利用できるようなので、ハウツー系ブログを運営されている方は対応してみるとよいかもしれません。</p>
<p><a href="https://developers.google.cn/search/docs/data-types/how-to?hl=ja" target="_blank" rel="nofollow noopener noreferrer">Googleの公式サイト</a>では、キッチンのタイル張りをする方法についての例が記載されていますが、このようなカテゴリは「"@type": "HowTo"」タイプに分類されるようです。</p>
<p><img src="https://blog-tips.net/blog/image/howto-kouzouka.png" alt="" width="320" height="226" style="border: solid 1px #ccc;" /></p>
<p>ただし、「<b>レシピに HowTo マークアップを使用しないでください。</b>」との記載があるので、レシピ関連のサイトでは「"@type": "Recipe"」で対応することをおすすめします。</p>
<p>また、このページのように、何とかの作り方のような内容であったとしても、何ら具体的な手順を示さず、単に最新情報や雰囲気をお伝えするだけのコンテンツの場合は「"@type": "NewsArticle"」の方が適しているのかもしれません。</p>
<p>この「HowTo」構造化データを利用する際ですが、基本的には"step": [ほにゃらら]の箇所がメインコンテンツになります。このほにゃららの箇所に、「"HowToStep"」や「"HowToDirection"」でそれぞれの手順と指示を記載し、画像やURLも差し込みつつ記述していくことになります。画像については、widthとheightの値を逆にしないように注意するとよいでしょう。</p>
<p>そのほか、所要時間の「"totalTime"」や必要な素材の「"supply"」、必要な道具の「"tool"」なども記載しておくとよいかもしれません。</p>
<p>今とのころ、この「HowTo」構造化データはモバイル検索だけでリッチリザルトで表示される可能性があるようですが、PCサイトでも同様の内容を記載しておくことをおすすめします。</p>
<p>レスポンシブウェブデザインを採用している場合、モバイルもPCも同様の内容を記載する形になるかと思いますが、amp対応などで別のページにしている場合、PCサイトにも記載しておくとよいでしょう。</p>]]>
    </content>
</entry>

<entry>
    <title>見出しh1「line-height」の値はfont-sizeに反比例する</title>
    <link rel="alternate" type="text/html" href="https://blog-tips.net/blog/tips/line-height.html" />
    <id>tag:blog-tips.net,2020:/blog//11.724</id>

    <published>2020-12-15T15:15:06Z</published>
    <updated>2020-12-15T17:02:12Z</updated>

    <summary>前回、大手メディアの見出しh1フォントサイズについてチェックしましたが、海外サイ...</summary>
    <author>
        <name>ブログの作り方</name>
        
    </author>

    <category term="lineheightはフォントサイズが「40px～60px」の場合は「11～12」程度、「24px～32px」の場合は「13～15」程度、「16px」の場合は「16～17」程度がよいと思います。" label="line-heightはフォントサイズが「40px～60px」の場合は「1.1～1.2」程度、「24px～32px」の場合は「1.3～1.5」程度、「16px」の場合は「1.6～1.7」程度がよいと思います。" scheme="http://www.sixapart.com/ns/types#tag" />
    
    <content type="html" xml:lang="ja" xml:base="https://blog-tips.net/blog/">
        <![CDATA[<p>前回、大手メディアの見出しh1フォントサイズについてチェックしましたが、海外サイトでは40～60px程度、日本では24～32pxで設定されているケースが多いようです。</p>]]>
        <![CDATA[<p><b>☆前回の記事</b><br /> →　<a href="https://blog-tips.net/blog/tips/h1px.html">見出しh1のフォントサイズは何pxがよいのか？</a></p>
<p>そこで、今回はh1の<span class="red">line-height</span>についてもチェックしました。</p>
<p>■<b>海外メディア</b></p>
<p>Bloomberg：1.25（font-size:59.7px）<br /> ワシントンポスト：1.1（56px）<br /> ハフポスト：1.36（52px）<br /> BBC：1.1（44px）<br /> CNN：1.25（40.5px）<br /> ロイター：1.18（35px）</p>
<p>Avg.：1.20（47.86px）</p>
<p>h1のフォントサイズが40px～60pxで大きめに設定されている海外メディアの場合、line-heightについては小さめの「1.1～1.2」で設定されているケースが多いようです。</p>
<p>一方、フォントサイズが24px～32px程度の日本メディアの場合、「1.3～1.5」程度のケースが多いようでした。</p>
<p>■<b>日本メディア</b></p>
<p>読売新聞：1.3（32px）<br /> NHK：1.4（32px）<br /> 西日本新聞：1.4（32px）<br /> 産経新聞：1.3（28px）<br /> 毎日新聞：1.5（26px）<br /> 東京新聞：不明（24px）<br /> 朝日新聞：1.4（24px）<br /> 日経：1.5（24px）<br /> ヤフーニュース：1.4（22px）<br /> msnニュース：1.33（36px）</p>
<p>Avg.：1.39（28px）</p>
<p>公官庁のホームページでは1.2程度のケースもあります。</p>
<p>■<b>官庁</b></p>
<p>首相官邸：1.33（48px）<br /> 厚生労働省：1.2（36px）<br /> 経産省：1.2（25px）</p>
<p>また、コンテンツ内については、16pxで「1.6」、もしくは「1.7」のケースが多かったです。</p>
<p>おおむね、「font-size」と「line-height」は反比例の関係にあると感じています。</p>
<p><img src="https://blog-tips.net/blog/image/line-height.png" alt="" width="320" height="203" border="0" /></p>
<p>当ブログについては、コンテンツ内もh1も同じ「1.6」で設定していたのですが、h1については1.4前後に変更した方がよいのかもしれません。</p>
<p>h1の見出しが長くなり、文字サイズが大きい状態で２行に表示される場合、line-heightを大きく設定してしまうと行間が空いてしまい、少し間の抜けた印象を受けてしまいます。そのため、ある程度は小さく設定した方が良いと思います。</p>
<p>まとめますと、フォントサイズが「40px～60px」のline-heightは「1.1～1.2」程度、「24px～32px」の場合は「1.3～1.5」程度、「16px」の場合は「1.6～1.7」程度がよいと思います。</p>
<p>また、font-familyについては、おおむねヒラギノ、メイリオのサンセリフ・ゴシック体でしたが、首相官邸と読売新聞についてはセリフの明朝体、文科省はゴシック体でも「ＭＳ Ｐゴシック」を採用しているようでした。</p>
<p>結論としましては、日本のサイトの場合、おおむね見出しh1のfont-sizeを28px、line-heightを1.4、font-familyをヒラギノ、メイリオ、sans-serifにて設定するのが一般的なのかもしれません。</p>]]>
    </content>
</entry>

<entry>
    <title>iPad用のブレイクポイントを「834px」に変更</title>
    <link rel="alternate" type="text/html" href="https://blog-tips.net/blog/tips/ipad-768px.html" />
    <id>tag:blog-tips.net,2020:/blog//11.723</id>

    <published>2020-12-08T05:52:00Z</published>
    <updated>2020-12-08T14:26:19Z</updated>

    <summary>第７世代のiPadを購入したのですが、以前と比べて画面のサイズが大きくなっており...</summary>
    <author>
        <name>ブログの作り方</name>
        
    </author>

    <category term="今までipadのブレイクポイントを「768px」で設定しており、chromeのデベロッパーツールでもipadが「768px」となっていますが、これでは小さいのではないかと感じたので「834px」に変更しました。" label="今までiPadのブレイクポイントを「768px」で設定しており、ChromeのデベロッパーツールでもiPadが「768px」となっていますが、これでは小さいのではないかと感じたので「834px」に変更しました。" scheme="http://www.sixapart.com/ns/types#tag" />
    
    <content type="html" xml:lang="ja" xml:base="https://blog-tips.net/blog/">
        <![CDATA[<p>第７世代のiPadを購入したのですが、以前と比べて画面のサイズが大きくなっており、自サイトを閲覧すると崩れて表示されていました。</p>]]>
        <![CDATA[<p>今まではメディアクエリのブレイクポイントを「768px」で設定しており、ChromeのデベロッパーツールでもiPadが「768px」となっていますが、これでは小さいのではないかと感じています。</p>
<p><img src="https://blog-tips.net/blog/image/ipad-768px.png" alt="" width="320" height="200" class="ccc" /></p>
<p>ブレイクポイントを第７世代iPadの実機で確認してみると、「809px」では反応なし、「810px」からはレスポンシブで表示されましたが、max-device-width: 810pxあたりまで上げないと正常に表示されません。</p>
<p>最近のiPadはサイズが1620pxと大きめになっているため、Retinaで倍になっているとしても、ブレイクポイントを「810px」まで上げる必要があると感じています。</p>
<p>さらに大きな画面のiPad Proは「2,388 x 1,668ピクセル解像度」となっており、Retinaなので２で割ると「<span class="red">834px</span>」となります。そのため、iPad Proまで対応して最終的にはブレイクポイントを「max-device-width: 834px」に設定しておきました。</p>
<p>加えて、さらに大きい12.9インチiPad Proの端末では「2,732 x 2,048ピクセル解像度」となっているため、この場合は1024pxが必要な計算になりますが、この大きさだとノートパソコンとかぶる気もしており、こちらはPC用の画面で表示することにしました。</p>
<p>大手メディアの場合、iPadについては<a href="https://blog-tips.net/blog/tips/viewport.html">viewportでのwidthをdevice-width</a>ではなく、1000px程度の実数で決め打ちをし、PC用をそのまま縮小して表示しているケースもありますが、わたしはfloatを解除してスマホのように表示させています。</p>
<p>iPadでデスクトップと同じように表示させてしまうと、やはり文字が小さくなって読みづらい気がしますので、floatを解除して文字サイズを大きめに設定した方がいいと思います。</p>
<p>ちなみに、スマートフォンについては今までどおり「480px」にしていますが、旧SEで320px、iPhone Plusでも「414px」のため、スマホのブレイクポイントは「480px」もあれば十分だと思います。</p>]]>
    </content>
</entry>

<entry>
    <title>見出しh1のフォントサイズは何pxがよいのか？</title>
    <link rel="alternate" type="text/html" href="https://blog-tips.net/blog/tips/h1px.html" />
    <id>tag:blog-tips.net,2020:/blog//11.722</id>

    <published>2020-11-29T06:27:55Z</published>
    <updated>2020-12-15T17:07:24Z</updated>

    <summary>最近のニュースメディアはフォントサイズが大きくなってきていますが、特に海外メディ...</summary>
    <author>
        <name>ブログの作り方</name>
        
    </author>

    <category term="自サイトでは見出しタグを「22px～24px」あたりに設定していたのですが、最近の傾向を考えますと、ワンランク上の「26px～28px」で大きめに設定した方がよいのかもしれません。" label="自サイトでは見出しタグを「22px～24px」あたりに設定していたのですが、最近の傾向を考えますと、ワンランク上の「26px～28px」で大きめに設定した方がよいのかもしれません。" scheme="http://www.sixapart.com/ns/types#tag" />
    
    <content type="html" xml:lang="ja" xml:base="https://blog-tips.net/blog/">
        <![CDATA[<p>最近のニュースメディアはフォントサイズが大きくなってきていますが、特に海外メディアでその傾向が強いと感じています。</p>]]>
        <![CDATA[<p>デスクトップPCにて、海外主要メディアのh1タグのfont-sizeをチェックしてみると、おおむね40px～60pxで設定されているようです。</p>
<p>■<b>海外メディア</b></p>
<p>Bloomberg：59.7px<br /> ワシントンポスト：56px<br /> ハフポスト：52px<br /> BBC：44px<br /> CNN：40.5px<br /> ロイター：35px</p>
<p>Avg.：47.86px</p>
<p>40px以上となると横幅が広くなるため、サイドバーが見出しタグの下にもぐりこむ形のレイアウトが多くなってきています。</p>
<p>一方、日本メディアの場合、24px～32pxで設定されていることが多いです。</p>
<p>■<b>日本メディア</b></p>
<p>読売新聞：32px<br /> NHK：32px<br /> 西日本新聞：32px<br /> 産経新聞：28px<br /> 毎日新聞：26px<br /> 東京新聞：24px<br /> 朝日新聞：24px<br /> 日経：24px<br /> ヤフーニュース：22px<br /> msnニュース：36px</p>
<p>Avg.：28px</p>
<p>これまで、自サイトでは見出しタグを「22px～24px」あたりで設定していたのですが、最近のh1巨大化の傾向を考えますと、ワンランク上の「26px～28px」を採用する時期に来ているのかもしれません。</p>
<p>公官庁も調べてみましたが、50px近いホームページもあるようです。</p>
<p>■<b>官庁</b></p>
<p>首相官邸：48px<br /> 厚生労働省：36px<br /> 経産省：25px</p>
<p>日本で大きめのフォントサイズを採用しているのが首相官邸やmsnニュースかと思いますが、サイドバーが見出しの下にもぐり込む形になっています。</p>
<p><img src="https://blog-tips.net/blog/image/h1-36px.png" alt="" width="320" height="212" style="border: solid 1px #ccc;" /></p>
<p>日本でもこのスタイルが普及するのかは不明ですが、今後の様子を見て、もし普及するようなら自サイトでも取り入れていこうと考えてます。</p>
<p>このh1フォントサイズが大きくなってきている原因は不明ですが、もしかすると最近はバナーの広告サイズが巨大化しているため、それにあわせてフォントサイズも大きくなってきているのかもしれません。</p>
<p>いずれにしても、20px前後で設定している場合は「26px～28px」あたりまで大きくした方が良いかと思います。</p>
<p>【<b>関連記事：</b>】<br><a href="https://blog-tips.net/blog/tips/line-height.html">見出しh1「line-height」の値はfont-sizeに反比例する</a></p>]]>
    </content>
</entry>

</feed>
